import{_ as h,D as T,c as i,b as Q,w as e,a6 as o,j as t,a as s,a5 as l,o as a,I as r}from"./chunks/framework.BCoxgnQ_.js";const N1=JSON.parse('{"title":"红黑树","description":"","frontmatter":{"date":"2024-06-21 17:01:17","title":"红黑树","top":0,"outline":"deep","tags":["二叉搜索树","红黑树","数据结构","平衡树","AVL树","B树"],"lastUpdated":"2024-07-14 21:49:58"},"headers":[],"relativePath":"_posts/博客/红黑树.md","filePath":"_posts/博客/红黑树.md","lastUpdated":1721378190000}'),d={name:"_posts/博客/红黑树.md"},p=l(`<p>由于c++里已经有现成的红黑树(map)， 所以之前由于没有应用场景， 一直没有去了解红黑树。</p><p>现在为什么会去学习红黑树:</p><ol><li>js的map很不好用 <ol><li>必须通过get、set函数操作值</li><li>没有默认值</li></ol></li><li>js的map底层是哈希表实现， 导出的数据顺序是插入顺序(不符合直觉)</li><li>引用类型直接认为是不一样的， 没有提供自定义hash值的接口</li></ol><p>本来想找一些第三方库， 但并没有找到比较好的, 于是打算自行填了红黑树这个坑, 实现工具自给自足。</p><hr><p>前言: 红黑树是较为复杂的数据结构, 有比较多的背景知识, 所以本文将从科普平衡树的角度出发总结平衡树家族和红黑树由来。</p><h2 id="bst-二叉搜索树" tabindex="-1">BST(二叉搜索树) <a class="header-anchor" href="#bst-二叉搜索树" aria-label="Permalink to &quot;BST(二叉搜索树)&quot;">​</a></h2><p>二叉搜索树在二叉树的基础上增加了如下性质的要求:</p><ol><li>空树是一颗二叉搜索树</li><li>二叉搜索树的左子树上任意结点的权值小于根结点</li><li>二叉搜索树的右子树上任意结点的权值大于根结点</li><li>二叉搜索树的左右子树均为二叉搜索树</li></ol><blockquote><p>从上面可以看出BST有个隐式的要求是不能出现两个权值相等的结点， 对于这种情况的处理一般是根据场景选择&lt;后来者覆盖前者&gt;或者&lt;添加结点count值&gt;</p></blockquote><p>BST可以很好的解决可变序列的搜索问题。 试想一个数组里， 它将来可能需要删除某个元素， 也可能会添加进来一些元素， 你需要在这些情况发生的同时满足较快的搜索。</p><h3 id="bst的查找" tabindex="-1">BST的查找 <a class="header-anchor" href="#bst的查找" aria-label="Permalink to &quot;BST的查找&quot;">​</a></h3><p>将搜索值从根结点开始比较:</p><ul><li>当前结点权值与搜索值相同: 找到了</li><li>当前结点权值小于搜索值： 与左孩子进行比较</li><li>当前结点权值大于搜索值: 与右孩子进行比较</li><li>当前结点为空： 查找失败， 不存在</li></ul><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">searchNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">K</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (root </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> compareResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root.key, key);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (compareResult) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COMPARE_RESULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> root;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COMPARE_RESULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">searchNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root.left, key);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COMPARE_RESULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MORE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">searchNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root.right, key);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>BST的添加操作与此类似， 不再重复。</p><h3 id="bst的删除" tabindex="-1">BST的删除 <a class="header-anchor" href="#bst的删除" aria-label="Permalink to &quot;BST的删除&quot;">​</a></h3><p>首先在搜索树中查找到待删除值对应的结点。</p><ul><li>待删除结点为叶子结点: 直接删除即可</li><li>待删除结点只有一个儿子: 删除结点后， 让唯一的儿子顶替其位置即可</li><li>待删除结点有两个儿子: 删除结点， 使用其【前驱】或【后继】顶替其位置</li></ul><p>重点解释【前驱】和【后继】是什么， 以及为什么可以让它们顶替。</p>`,20),c=l('<p>以此树距离， 此树的中序遍历序列为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2, 3, 4, 5, 6, 7, 8</span></span></code></pre></div>',2),m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 500 688","aria-hidden":"true"},g=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"35",d:"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z",style:{"stroke-width":"3"}})])])],-1),A=[g],u=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"5")])],-1),_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.532ex",role:"img",focusable:"false",viewBox:"0 -677 500 677","aria-hidden":"true"},w=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",style:{"stroke-width":"3"}})])])],-1),x=[w],C=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"4")])],-1),H={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},f={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 500 688","aria-hidden":"true"},y=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"36",d:"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z",style:{"stroke-width":"3"}})])])],-1),L=[y],b=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"6")])],-1),B={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},D={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 500 688","aria-hidden":"true"},v=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"35",d:"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z",style:{"stroke-width":"3"}})])])],-1),M=[v],N=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"5")])],-1),F={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},V={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 500 688","aria-hidden":"true"},S=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"35",d:"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z",style:{"stroke-width":"3"}})])])],-1),R=[S],P=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"5")])],-1),Z={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},j={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.532ex",role:"img",focusable:"false",viewBox:"0 -677 500 677","aria-hidden":"true"},I=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",style:{"stroke-width":"3"}})])])],-1),U=[I],G=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"4")])],-1),q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},z={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 500 688","aria-hidden":"true"},J=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"36",d:"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z",style:{"stroke-width":"3"}})])])],-1),O=[J],K=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"6")])],-1),$={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},W={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.532ex",role:"img",focusable:"false",viewBox:"0 -677 500 677","aria-hidden":"true"},X=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",style:{"stroke-width":"3"}})])])],-1),Y=[X],t2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"4")])],-1),s2=t("p",null,[t("strong",null,"注"),s(": "),t("em",null,"NIL表示占位的空节点")],-1),a2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},e2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.532ex",role:"img",focusable:"false",viewBox:"0 -677 500 677","aria-hidden":"true"},l2=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",style:{"stroke-width":"3"}})])])],-1),i2=[l2],n2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"4")])],-1),Q2=t("ol",null,[t("li",null,"大于5左子树所有结点(除了4)"),t("li",null,"小于5右子树所有结点")],-1),o2=t("p",null,"所以4天然可以取代5的位置；6同理。",-1),r2=t("p",null,"N的前驱和后继的定义可以简化为:N左子树中权值最大的结点、N右子树中权值最小的结点。",-1),h2=t("h3",{id:"bst的最坏情况",tabindex:"-1"},[s("BST的最坏情况 "),t("a",{class:"header-anchor",href:"#bst的最坏情况","aria-label":'Permalink to "BST的最坏情况"'},"​")],-1),T2=t("p",null,"BST进行搜索和删除的时间复杂度都与BST的高度h成正相关， 因为搜索操作最坏情况下需要从根一直比较到最深的叶子， 也就是h次比较。",-1),d2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.79ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2117 1000","aria-hidden":"true"},c2=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1728,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),m2=[c2],k2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"h"),t("mo",{stretchy:"false"},")")])],-1),g2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},A2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.86ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 2148 899","aria-hidden":"true"},u2=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(783,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1260,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g>',1),_2=[u2],E2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"l"),t("mi",null,"o"),t("mi",null,"g"),t("mi",null,"N")])],-1),w2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"},C2=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),H2=[C2],f2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"N")])],-1),y2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},L2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.495ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2429 1000","aria-hidden":"true"},b2=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2040,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),B2=[b2],D2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"N"),t("mo",{stretchy:"false"},")")])],-1),v2=l('<p>而且通过一个有序（或大致有序）的插入顺序， 就能轻易使BST达到比较坏的情况。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1, 2, 3, 4, 5, 6, 7</span></span></code></pre></div>',2),M2=l('<h2 id="平衡树" tabindex="-1">平衡树 <a class="header-anchor" href="#平衡树" aria-label="Permalink to &quot;平衡树&quot;">​</a></h2><p>平衡树是改进的二叉搜索树, 不同的平衡树关于平衡的定义有所不同， 但总的来说是在追求: 各个叶子的深度(从根到各叶子结点的简单路径长度)趋于相近/平衡 (让树的高度尽量低， 不出现某分支的深度远远的超过其他分支的情况)。</p><h3 id="自平衡树" tabindex="-1">自平衡树 <a class="header-anchor" href="#自平衡树" aria-label="Permalink to &quot;自平衡树&quot;">​</a></h3><p>自平衡树： 在插入、删除过后会自动调整树结构使其满足平衡定义的平衡树。</p><p>自平衡树相比于二叉搜索树而言， 多了插入和删除时的维护平衡操作。</p><p>平衡树 -&gt; 插入或删除结点(通二叉搜索树) -&gt; 平衡树失衡 -&gt; 维护平衡</p><h3 id="树的旋转" tabindex="-1">树的旋转 <a class="header-anchor" href="#树的旋转" aria-label="Permalink to &quot;树的旋转&quot;">​</a></h3><p>考虑如下BST:</p>',8),N2=t("p",null,"右分支深度明显的大于左分支深度, 此时我们需要调整， 使这棵树更平衡、且不破坏BST性质。",-1),F2=t("p",null,"此时便可以使用旋转, 旋转操作图示如下:",-1),V2=t("p",null,[t("img",{src:"https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/bst-rotate.svg",alt:"bst-rotate"})],-1),S2=t("p",null,[t("img",{src:"https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/Tree_rotation_animation_250x250.gif",alt:"树旋转的过程演示"})],-1),R2=t("p",null,"左旋、右旋的名字由来为根节点的移动方向， 具体的:",-1),P2=t("p",null,"左旋: 根结点移动到左子树上， 根结点的右儿子成为了新的根结点。",-1),Z2=t("p",null,"右旋: 根结点移动到右子树上, 根结点的右儿子成为了新的根结点。",-1),j2=t("p",null,"从结果上看:",-1),I2=t("ol",null,[t("li",null,"旋转操作不会破坏BST性质(中序不变)"),t("li",null,[t("strong",null,"左旋操作使原左子树深度+1， 原右儿子右子树深度-1。"),s(" 影响范围: (左+1、右右-1)")]),t("li",null,[t("strong",null,"右旋操作使原右子树深度+1， 原左儿子左子树深度-1。"),s(" 影响范围: (右+1、左左-1)")])],-1),U2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},G2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.618ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2041 1000","aria-hidden":"true"},q2=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1152,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1652,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),z2=[q2],J2=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mn",null,"1"),t("mo",{stretchy:"false"},")")])],-1),O2=l(`<div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 左旋操作</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 左旋的子树根结点, 需要保证不为空且右子树不为空 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *        g           p</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *       / \\         / \\</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *      u   p  --&gt;  g   n</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *         / \\     / \\    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *        m   n   u   m     </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotateLeft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(node: Node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">K</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.parent;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> successor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.right</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 左旋核心操作, 根变为successor的左子树, successor变为根</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRightChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(successor.left);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  successor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLeftChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(node);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // node的位置为successor取代, 需要更新node的父结点与successor的关系</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (direction) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LEFT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLeftChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(successor);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RIGHT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRightChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(successor);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ROOT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.root </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> successor;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="avl树" tabindex="-1">AVL树 <a class="header-anchor" href="#avl树" aria-label="Permalink to &quot;AVL树&quot;">​</a></h3>`,2),K2=t("strong",null,"不大于",-1),$2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},W2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.507ex",role:"img",focusable:"false",viewBox:"0 -666 500 666","aria-hidden":"true"},X2=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mn"},[t("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})])])],-1),Y2=[X2],t3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mn",null,"1")])],-1),s3=t("p",null,"平衡因子：右子树高度 - 左子树高度",-1),a3=t("blockquote",null,[t("p",null,[s("AVL树名字的来源为它的两个发明者名字合并: "),t("a",{href:"https://en.wikipedia.org/wiki/Georgy_Adelson-Velsky",target:"_blank",rel:"noreferrer"},"Georgy Adelson-Velsky"),s(" and "),t("a",{href:"https://en.wikipedia.org/wiki/Evgenii_Landis",target:"_blank",rel:"noreferrer"},"Evgenii Landis")])],-1),e3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},l3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.86ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 2148 899","aria-hidden":"true"},i3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(783,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1260,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g>',1),n3=[i3],Q3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"l"),t("mi",null,"o"),t("mi",null,"g"),t("mi",null,"N")])],-1),o3=t("h4",{id:"avl树的维护操作",tabindex:"-1"},[s("AVL树的维护操作 "),t("a",{class:"header-anchor",href:"#avl树的维护操作","aria-label":'Permalink to "AVL树的维护操作"'},"​")],-1),r3=t("p",null,"先说明几个事实",-1),h3=t("li",null,"插入/删除结点后， 可能导致包含该结点的所有子树树失衡",-1),T3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.564ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.308ex",height:"2.261ex",role:"img",focusable:"false",viewBox:"0 -750 4556 999.5","aria-hidden":"true"},p3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(278,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">平</text></g><g data-mml-node="mi" transform="translate(1278,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">衡</text></g><g data-mml-node="mi" transform="translate(2278,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">因</text></g><g data-mml-node="mi" transform="translate(3278,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">子</text></g><g data-mml-node="mo" transform="translate(4278,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g></g></g>',1),c3=[p3],m3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),t("mi",{mathvariant:"normal"},"平"),t("mi",{mathvariant:"normal"},"衡"),t("mi",{mathvariant:"normal"},"因"),t("mi",{mathvariant:"normal"},"子"),t("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|")])],-1),k3=l('<p>在AVL树插入/删除后, 我们将从插入/删除的结点的父结点开始向上(这样就能遍历到包含该结点的所有树)， 判断当前当前节点的平衡因子是否失衡， 若失衡则对当前结点进行维护。</p><p>维护操作可以分类讨论， 一些约定如下:</p><ol><li>所绘图中根结点（N）为失衡的结点(即h(L) - h(R) == 2 / -2)</li><li>L为N的左孩子、LL为L的左孩子(R、RR同理)</li><li>结点名称后用括号注明高度</li><li>『圆』为具体结点， 而梯形代指一颗树</li></ol><p>一些事实如下:</p><ol><li>由于是自底向上进行维护， 当前讨论的是结点N, 那么L所在子树和R所在子树已经维护完成符合AVL树性质</li><li>被插入/删除结点的爷爷结点开始， 才可能出现失衡</li></ol><h5 id="ll-rr型失衡" tabindex="-1">LL/RR型失衡 <a class="header-anchor" href="#ll-rr型失衡" aria-label="Permalink to &quot;LL/RR型失衡&quot;">​</a></h5><p>以LL型失衡举例, 这是一颗LL型失衡的树, 满足如下特征:</p>',7),g3=t("li",null,"N的左子树比右子树高",-1),A3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"16.895ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 7467.6 1000","aria-hidden":"true"},_3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1958,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2639,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3305.8,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4361.6,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5249.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5638.6,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6319.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7078.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),E3=[_3],w3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"≥"),t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"R"),t("mo",{stretchy:"false"},")")])],-1),x3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},C3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.807ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4334.6 1000","aria-hidden":"true"},H3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2036,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2702.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3758.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g></g>',1),f3=[H3],y3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"R"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h")])],-1),L3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.527ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 5979 1000","aria-hidden":"true"},B3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1958,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2624.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3680.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4478.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5479,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g>',1),D3=[B3],v3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"2")])],-1),M3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},N3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"15.068ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 6660 1000","aria-hidden":"true"},F3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1958,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2639,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3305.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4361.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5159.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(6160,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1),V3=[F3],S3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"1")])],-1),R3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},P3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"19.565ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 8647.6 1000","aria-hidden":"true"},Z3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(853.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1909.6,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2797.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3186.6,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3867.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4626.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5293.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6349.1,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7147.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(8147.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1),j3=[Z3],I3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"h"),t("mo",null,"≤"),t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"R"),t("mo",{stretchy:"false"},")"),t("mo",null,"≤"),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"1")])],-1),U3=t("p",null,"此时L和R的高度差可以看成是LL和R的高度差， 而右旋的效果为 (右+1、左左-1)满足此情况， 进行一次右旋即可。",-1),G3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},q3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"22.213ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9818 1000","aria-hidden":"true"},z3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(798.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1798.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2576.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3632,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4520,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4909,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5797,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6463.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7519.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8317.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(9318,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g>',1),J3=[z3],O3=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"1"),t("mo",null,"≤"),t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"N"),t("mo",{stretchy:"false"},")"),t("mo",null,"≤"),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"2")])],-1),K3=t("h5",{id:"lr-rl型失衡",tabindex:"-1"},[s("LR/RL型失衡 "),t("a",{class:"header-anchor",href:"#lr-rl型失衡","aria-label":'Permalink to "LR/RL型失衡"'},"​")],-1),$3=t("p",null,"同样只以LR型举例:",-1),W3={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},X3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.807ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4334.6 1000","aria-hidden":"true"},Y3=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2036,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2702.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3758.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g></g>',1),t6=[Y3],s6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"R"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h")])],-1),a6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},e6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.527ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 5979 1000","aria-hidden":"true"},l6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1958,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2624.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3680.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4478.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5479,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g>',1),i6=[l6],n6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"2")])],-1),Q6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},o6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.171ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4937.6 1000","aria-hidden":"true"},r6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1958,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2639,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3305.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4361.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g></g>',1),h6=[r6],T6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h")])],-1),d6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"15.244ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 6738 1000","aria-hidden":"true"},c6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1958,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2717,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3383.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4439.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5237.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(6238,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1),m6=[c6],k6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"R"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"1")])],-1),g6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},A6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.105ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9328.6 1000","aria-hidden":"true"},u6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(798.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1798.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2576.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3632,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4520,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4909,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5590,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6349,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7030,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7696.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8752.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g></g>',1),_6=[u6],E6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"h"),t("mo",null,"−"),t("mn",null,"1"),t("mo",null,"≤"),t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"R"),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"≤"),t("mi",null,"h")])],-1),w6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.282ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9406.6 1000","aria-hidden":"true"},C6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(798.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1798.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2576.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3632,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4520,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4909,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5590,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6349,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7108,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7774.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8830.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g></g>',1),H6=[C6],f6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"h"),t("mo",null,"−"),t("mn",null,"1"),t("mo",null,"≤"),t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mi",null,"R"),t("mi",null,"R"),t("mo",{stretchy:"false"},")"),t("mo",null,"≤"),t("mi",null,"h")])],-1),y6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},L6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.647ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3380 1000","aria-hidden":"true"},b6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1440,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(1940,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2699,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g></g></g>',1),B6=[b6],D6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"L"),t("mi",null,"R"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"/")]),t("mi",null,"R"),t("mi",null,"L")])],-1),v6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},M6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"28.529ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 12609.7 1000","aria-hidden":"true"},N6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1958,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2624.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3680.6,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4478.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5479,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5979,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6423.7,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7311.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7700.7,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8588.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(9255.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(10311.2,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(11109.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(12109.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1),F6=[N6],V6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"1"),t("mo",null,","),t("mi",null,"H"),t("mo",{stretchy:"false"},"("),t("mi",null,"N"),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mi",null,"h"),t("mo",null,"+"),t("mn",null,"1")])],-1),S6=t("blockquote",null,[t("p",null,"Todo: 是怎么想到用先后两次不同的旋转来修复性质的?是否蕴含着数学原理")],-1),R6=t("h3",{id:"b树",tabindex:"-1"},[s("B树 "),t("a",{class:"header-anchor",href:"#b树","aria-label":'Permalink to "B树"'},"​")],-1),P6=t("p",null,[t("img",{src:"https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/400px-B-tree.svg.png",alt:"img"})],-1),Z6=t("p",null,"B树是一种自平衡多叉树。",-1),j6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},I6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.986ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 878 453","aria-hidden":"true"},U6=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D45A",d:"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1),G6=[U6],q6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"m")])],-1),z6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},J6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.986ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 878 453","aria-hidden":"true"},O6=t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D45A",d:"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1),K6=[O6],$6=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"m")])],-1),W6={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},X6={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.258ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2766 1000","aria-hidden":"true"},Y6=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2308" d="M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(444,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1322,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mn" transform="translate(1822,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2322,0)"><path data-c="2309" d="M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z" style="stroke-width:3;"></path></g></g></g>',1),t1=[Y6],s1=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",{fence:"false",stretchy:"false"},"⌈"),t("mi",null,"m"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"/")]),t("mn",null,"2"),t("mo",{fence:"false",stretchy:"false"},"⌉")])],-1),a1=t("li",null,"如果根节点不是叶子节点，那么它至少有两个子节点。",-1),e1=t("li",null,"若一个结点有有k个子结点， 那么该结点有k-1个键， 反之亦然；",-1),l1=t("li",null,"每个结点的键值升序排列， 且n的第k个子节点的所有键值满足小于n的第k个键值、大于n的第k-1个键值",-1),i1=t("li",null,"所有的叶子节点都在同一层。",-1),n1=l('<h3 id="红黑树" tabindex="-1">红黑树 <a class="header-anchor" href="#红黑树" aria-label="Permalink to &quot;红黑树&quot;">​</a></h3><p>红黑树是满足如下性质的二叉搜索树:</p><ol><li>每一个结点要么是红色， 要么是黑色</li><li>红色结点的孩子必须为黑色</li><li>对于红黑树中任意一个结点， 它到NIL(null)结点的每一条简单路径必须包含相同数量的黑色结点</li></ol><p>除此之外， 还有两条被广泛使用的红黑树的性质</p><ol start="4"><li>根结点是黑色</li><li>NIL(null)结点被认为是黑色</li></ol><p>这两条性质对于红黑树来说并不是必须的， 但能便利对红黑树的算法归纳， 我们姑且也认为这是红黑树必须满足的性质。</p><p>红黑树最初是从B树中推导出来的, 事实上红黑树可以等价的看做四阶B树。</p><h4 id="红黑树与4阶b树" tabindex="-1">红黑树与4阶B树 <a class="header-anchor" href="#红黑树与4阶b树" aria-label="Permalink to &quot;红黑树与4阶B树&quot;">​</a></h4><p>以下引用自: <a href="https://jasonxqh.github.io/2020/11/03/%E7%BA%A2%E9%BB%91%E6%A0%91/" target="_blank" rel="noreferrer">红黑树 | Jason‘s Blog (jasonxqh.github.io)</a></p><blockquote><p>红黑树和4阶B树之间存在等价关系。如哦从红黑树的树根开始，自顶向下逐层检查，如果遇到红结点，则将该节点压缩到父节点一侧；如果遇到黑节点，则保留。因为<strong>红结点对黑高没有贡献</strong>，而黑结点对黑高有贡献。</p><p>红黑树与4阶B树的4种等价方式：</p><p>1） 两个黑孩子(黑黑)，如图所示：</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/2.png" alt="img"></p><p>2）左黑右红(黑红)，如图所示：</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/3.png" alt="img"></p><p>\\3) 左红右黑(红黑) ，如图所示：</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/4.png" alt="img"></p><p>4）两个红孩子(红红)，如图所示</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/5.png" alt="img"></p><p>从红黑树与4阶B树的等价关系可以看出，4阶B树中的结点中必然含有一个黑节点。而且不会出现红色的父亲。每一个结点最多包含三个关键字：如果包含2个红关键字，则黑关键字必然在中间位置。</p><p>我们可以尝试将这一棵红黑树进行压缩。</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/1.png" alt="img"></p><p>最后可以得到这样一棵4阶的B树</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/1.jpg" alt="img"></p><p>那么既然红黑树和4阶B树是可以互相转化的，那么为什么还要用红黑树呢？这是因为红黑树和B树处理的方向不同。B树主要用于内外存的访问，旋转不是很容易，但是红黑树的旋转调平衡比较方便</p></blockquote><h4 id="插入" tabindex="-1">插入 <a class="header-anchor" href="#插入" aria-label="Permalink to &quot;插入&quot;">​</a></h4><p>红黑树的插入， 首先将插入结点按照BST的规则插入树中， 然后判断是否会导致失衡， 根据其情况使用不同策略进行修正。</p><p>一些约定:</p><ol><li>N为插入的结点</li><li>P为<code>parent</code>父亲结点</li><li>G为<code>grandparent</code>爷爷结点</li><li>U为<code>uncle</code>叔叔结点</li><li>圆形结点为具体的节点； 梯形结点代表一颗无需透露细节的子树</li><li>结点名称后如有括号， 则表示该节点到叶子结点的黑色数量</li></ol><p>一些事实:</p><ol><li>插入的结点必然为红色结点。 因为被插入的树已经满足红黑树性质， 此时如果插入一个黑色结点， 那么必然会让某条路径的黑色数量+1， 造成失衡(除空树情况)</li><li>空树情况下， 将插入结点更改为黑色即可</li><li>插入结点的父亲为黑色时， 不会破坏红黑树性质。</li></ol><p>排除以上情况时， 必然满足:</p><ol><li>插入结点有父结点且父结点为红色</li><li>插入结点有爷爷且爷爷为黑色</li></ol><p>接下来我们将以<code>uncle</code>为 红/黑 时分类讨论剩下的失衡情况。</p><h5 id="uncle为红色时" tabindex="-1">uncle为红色时 <a class="header-anchor" href="#uncle为红色时" aria-label="Permalink to &quot;uncle为红色时&quot;">​</a></h5><p>此时我们将G染红， P和U染黑，此时G子树已经修正了性质， 但G变红可能导致更上层的失衡， 因此我们将G当成刚插入的结点， 递归地维护。</p>',21),Q1=l(`<div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uncle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uncle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  uncle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBlack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBlack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gparent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">maintainAfterInsert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gparent);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="uncle为黑色时-ll-rr型失衡" tabindex="-1">uncle为黑色时: LL/RR型失衡 <a class="header-anchor" href="#uncle为黑色时-ll-rr型失衡" aria-label="Permalink to &quot;uncle为黑色时: LL/RR型失衡&quot;">​</a></h5><p>以<code>LL</code>型失衡举例(P为G的左儿子， N为P的左儿子)</p>`,3),o1=l('<p>我们从4阶B树的角度上看(B树的图非常重要非常好):</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/6.png" alt="img"></p><p>在不破坏搜索树性质的情况下， 如上B树只需交换p、g颜色即可。</p><blockquote><p>回收前文的一些疑问:</p><p><strong>为什么要分uncle为红还是黑？</strong></p><p>由上图可以发现， 当uncle为红时， x-p-g这一层还要加一个u变成 x-p-g-u</p><p><img src="https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/image-20240624221100810.png" alt="image-20240624221100810"></p><p>4阶B树的结点键值数超过了3， 此时发生上溢， 需要进行分裂操作， 如上图。</p><p>g变为红色后, g的上层可能失衡， 因此需要递归向上解决。</p><p><strong>叶子结点为什么要认为是黑色?</strong></p><p>在解决红黑树的失衡过程中， 经常遇到需要根据某个结点的颜色分类讨论的情况, 但我们发现，讨论结点的颜色其实只是在区分 红色(B树形式中会压缩到父结点) / 非红色(不会在父结点中) 两种情况。</p><p>所以没有必要每次都加一条: 如果为空， 如何如何。</p></blockquote><p>而由于4阶B树形式中黑色为根结点， 换成二叉树操作需要分为两步:</p><ol><li>基于g进行右旋</li><li>将p染黑， g染红</li></ol>',6),r1=l(`<div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (parent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LEFT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // LL型失衡</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotateRight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gparent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // RR型失衡</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotateLeft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gparent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBlack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gparent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="uncle为黑色时-lr-rl型失衡" tabindex="-1">uncle为黑色时: LR/RL型失衡 <a class="header-anchor" href="#uncle为黑色时-lr-rl型失衡" aria-label="Permalink to &quot;uncle为黑色时: LR/RL型失衡&quot;">​</a></h5><p>以LR型失衡举例(P为G的左儿子， N为P的右儿子):</p>`,3),h1=t("p",null,"同样转化为4阶B树形式:",-1),T1=t("p",null,[t("img",{src:"https://trudbot-md-img.oss-cn-shanghai.aliyuncs.com/8.png",alt:"img"})],-1),d1=t("p",null,"同样是出现了连续的红色， 同样把中间染黑， 但LR要进行的操作要多一点：",-1),p1=t("ol",null,[t("li",null,"基于P进行左旋")],-1),c1=t("ol",{start:"2"},[t("li",null,"基于G右旋"),t("li",null,"将N染黑, 将G染红")],-1),m1=l('<h4 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h4><p>在删除过程中， 我们现对欲删除的键值进行搜索， 在搜索到的节点为N的情况下:</p><blockquote><ol><li>若N有两个孩子， 将其前驱(或后继)结点的键与值与N替换(不替换颜色)，此时要删除的结点改为了前驱(或后继)结点</li></ol></blockquote><p>经过了<code>(1)</code>， 我们确认了要删除的结点究竟是哪个, 接下来以N代指要删除的结点, 此时我们继续分情况讨论:</p><blockquote><ol start="2"><li>若N为树中唯一的结点， 直接删除即可</li></ol></blockquote><blockquote><ol start="3"><li>若N有左/右孩子, 删除N后用它的左/右孩子代替N的位置(由于前驱或后继的性质, N不可能有两个孩子)</li></ol></blockquote><p><code>(2)</code>、`(3)策略保证了删除后BST的性质正确, 接下来从红黑树性质上考虑删除后如何修正:</p><blockquote><ol start="4"><li>若N为红色, 不会破坏红黑树性质， 无需维护</li></ol></blockquote><p>当删除一个红色结点时, 并不会改变路径中黑色结点的数量； 同时顶替它位置的左/右孩子 和 父亲(如果存在) 必然是黑色结点, 不会破坏<em>红色结点的孩子必须为黑色</em>的性质</p><blockquote><ol start="5"><li>若N有孩子 <ol><li>N的孩子必然为红色， 否则N子树不满足红黑树性质</li></ol></li></ol></blockquote>',10),k1=t("p",null,"删除N后, N所在路径的黑色数量减少， 必然导致不同路径的黑色数量不同； 且当P为红色时， 又破坏了红结点孩子必须为黑结点的性质。",-1),g1=t("p",null,"此时我们将R染黑， 就同时解决了两条性质的失衡问题:",-1),A1=l('<h5 id="删除操作修正原理" tabindex="-1">删除操作修正原理 <a class="header-anchor" href="#删除操作修正原理" aria-label="Permalink to &quot;删除操作修正原理&quot;">​</a></h5><p>让我们思考删除一个黑色结点N造成的后果, 本质上就是P(N的父亲)的两颗子树的黑色深度不再相等(<strong>N所在子树黑色深度减一</strong>)， 此时解决方法无非:</p><ol><li><p>在保证P树黑色深度不变的情况下， 弥补N所在子树减少的黑色深度, 此时必然需要有一个红色结点被染成了黑色结点</p><ul><li>被染黑的红色结点哪里来? <ul><li>在N所在子树上， 代替N位置</li><li>在S子树上, 需要调整结构让N子树多一个黑色结点</li><li>P染黑, S染红</li></ul></li></ul></li><li><p>(1)无法实现的情况下, 维护两颗子树黑色深度相同且将P树整体的黑色深度减一， 此时相当于&quot;P被删了&quot;， 向上递归维护。</p></li></ol><p>我想表达的意思是, 删除黑色叶子结点后的维护操作, 应该将其看作一个整体、一颗子树的黑色深度减一， 但它内部依然符合红黑树性质， 这样去理解， 进而复用到更广的情况。</p><p>我们重回<code>(5)</code>的情况, 5的情况本质是N子树的黑色数量减了1， 所以用了一个本身在N子树上的红色结点染黑进行替代</p><p>而在N子树内部解决不了问题， 就将问题抛给了上层。</p><p>**P为红色, S和S两个孩子均为黑色 **</p>',7),u1=l(`<p>此时将P染黑、S染红, 显然符合:</p><ol><li>P子树和S路径黑色深度不变</li><li>s子树红黑树性质未遭到破坏</li><li>N路径黑色深度+1</li></ol><p>即成功的为N擦了屁股。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sibling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBlack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p><strong>P为黑色， S和S两个孩子均为黑色</strong></p>`,5),_1=l(`<p>我们将S染红， P的两条路径下的黑色深度都减一, 将问题抛给上层。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sibling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">maintain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent.parent);</span></span></code></pre></div><p><strong>P任意, S为黑色， N远侄为红色, 近侄任意</strong></p><blockquote><p>当N为P左儿子时， S的左儿子为近侄， 右儿子为远侄； 反之同理。</p></blockquote>`,4),E1=t("ol",null,[t("li",null,"P向N方向旋转"),t("li",null,"S和P交换颜色, 远侄染黑")],-1),w1=t("p",null,"此时各方面都满足性质",-1),x1=t("p",null,[t("strong",null,"P任意, N近侄为红色， 远侄为黑色")],-1),C1=l("<ol><li>将S向远侄方向右旋</li><li>将近侄染黑， S染红</li></ol><p>此时情况变为了<strong>P任意, S为黑色， N远侄为红色, 近侄任意</strong>, 用同样方法解决即可。</p><p>以上四种情况， 我们枚举完了S为黑色的所有情况, 接下来考虑S为红色的情况</p><p><strong>S为红色</strong></p><p>此时P和S的孩子只能为黑色, 且S必然有真实孩子</p><ol><li>P向N方向旋转</li><li>P染红, S染黑</li></ol>",6),H1=l(`<p>此时可以发现整棵树相比之前的变化就是N下移， sibling变为了SL， 其他部分并未失衡。</p><p>继续在新的P子树上继续维护即可。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (sibling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DIRECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LEFT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotateLeft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotateRight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sibling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBlack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">afterErase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="红黑树和avl树的比较" tabindex="-1">红黑树和AVL树的比较 <a class="header-anchor" href="#红黑树和avl树的比较" aria-label="Permalink to &quot;红黑树和AVL树的比较&quot;">​</a></h3><ol><li>如果插入一个node引起了树的不平衡，AVL和RB-Tree都是最多只需要2次旋转操作，即两者都是O(1)；但是在删除node引起树的不平衡时，最坏情况下，AVL需要维护从被删node到root这条路径上所有node的平衡性，因此需要旋转的量级O(logN)，而RB-Tree最多只需3次旋转，只需要O(1)的复杂度。</li><li>AVL的结构相较RB-Tree来说更为平衡，在插入和删除node更容易引起Tree的unbalance，因此在大量数据需要插入或者删除时，AVL需要rebalance的频率会更高。因此，RB-Tree在需要大量插入和删除node的场景下，效率更高。自然，由于AVL高度平衡，因此AVL的search效率更高。</li></ol><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://elixir.bootlin.com/linux/latest/source/lib/rbtree.c" target="_blank" rel="noreferrer">rbtree.c-linux源码</a></p><p><a href="https://oi-wiki.org/ds/rbtree/#case-4" target="_blank" rel="noreferrer">红黑树 - OI Wiki (oi-wiki.org)</a></p><p><a href="https://www.cnblogs.com/crazymakercircle/p/16320430.html#autoid-h3-8-8-0" target="_blank" rel="noreferrer">红黑树（图解+秒懂+史上最全） - 疯狂创客圈 - 博客园 (cnblogs.com)</a></p><p><a href="https://jasonxqh.github.io/2020/11/03/%E7%BA%A2%E9%BB%91%E6%A0%91/" target="_blank" rel="noreferrer">红黑树 | Jason‘s Blog (jasonxqh.github.io)</a></p><p><a href="http://shuzang.top/2020/data-structure-b-tree-and-red-black-tree/#24-%E5%88%A0%E9%99%A4" target="_blank" rel="noreferrer">数据结构-B树与红黑树 - Shuzang&#39;s Blog</a></p><p><a href="https://en.wikipedia.org/wiki/Red%E2%80%93black_tree" target="_blank" rel="noreferrer">Red–black tree - Wikipedia</a></p><p><a href="https://github.com/julycoding/The-Art-Of-Programming-By-July-2nd/blob/master/ebook/zh/03.01.md" target="_blank" rel="noreferrer">The-Art-Of-Programming-By-July-2nd/ebook/zh/03.01.md at master · julycoding/The-Art-Of-Programming-By-July-2nd (github.com)</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%B9%B3%E8%A1%A1%E6%A0%91" target="_blank" rel="noreferrer">平衡树 - 维基百科，自由的百科全书 (wikipedia.org)</a></p><p>Weiss M A. 数据结构与算法分析 C语言描述（第2版）. 冯舜玺 译. 机械工业出版社, 2004.</p><h2 id="红黑树参考代码" tabindex="-1">红黑树参考代码 <a class="header-anchor" href="#红黑树参考代码" aria-label="Permalink to &quot;红黑树参考代码&quot;">​</a></h2><p>见: <a href="https://github.com/trudbot/easy-map?tab=readme-ov-file" target="_blank" rel="noreferrer">trudbot/easy-map (github.com)</a></p>`,17);function f1(y1,L1,b1,B1,D1,v1){const n=T("Mermaid");return a(),i("div",null,[p,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-136",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0AA((5))%20--%3E%20B((3))%0AA%20--%3E%20C((7))%0AB%20--%3E%20D((2))%0AB%20--%3E%20E((4))%0AC%20--%3E%20F((6))%0AC%20--%3E%20G((8))%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),c,t("p",null,[s("对于("),t("mjx-container",m,[(a(),i("svg",k,A)),u]),s(")来说， ("),t("mjx-container",_,[(a(),i("svg",E,x)),C]),s(")和("),t("mjx-container",H,[(a(),i("svg",f,L)),b]),s(")分别是它的前驱、后继， 因为在中序序列中它们是("),t("mjx-container",B,[(a(),i("svg",D,M)),N]),s(")的前后两个结点。")]),t("p",null,[s("当("),t("mjx-container",F,[(a(),i("svg",V,R)),P]),s(")被删除时， 使用 ("),t("mjx-container",Z,[(a(),i("svg",j,U)),G]),s(")或("),t("mjx-container",q,[(a(),i("svg",z,O)),K]),s(")来顶替它的位置， 不会破坏搜索树的性质， 以("),t("mjx-container",$,[(a(),i("svg",W,Y)),t2]),s(")举例。")]),s2,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-150",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E5%88%A0%E9%99%A45%E5%90%8E%0AA((4))%20--%3E%20B((3))%0AA%20--%3E%20C((7))%0AB%20--%3E%20D((2))%0AB%20--%3E%20NIL%0AC%20--%3E%20F((6))%0AC%20--%3E%20G((8))%0Aend%0Asubgraph%20%E5%88%A0%E9%99%A45%E5%89%8D%0Aa((5))%20--%3E%20b((3))%0Aa%20--%3E%20c((7))%0Ab%20--%3E%20d((2))%0Ab%20--%3E%20e((4))%0Ac%20--%3E%20f((6))%0Ac%20--%3E%20g((8))%0Aend%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%2Ca%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2CNIL%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),t("p",null,[s("可以发现， 由于("),t("mjx-container",a2,[(a(),i("svg",e2,i2)),n2]),s(")满足")]),Q2,o2,r2,h2,T2,t("p",null,[s("即时间复杂度为"),t("mjx-container",d2,[(a(),i("svg",p2,m2)),k2]),s("， 而h在最好情况下为"),t("mjx-container",g2,[(a(),i("svg",A2,_2)),E2]),s("级别， 最坏情况下为"),t("mjx-container",w2,[(a(),i("svg",x2,H2)),f2]),s("， 其中N为树的结点数量。")]),t("p",null,[s("当BST为一条链时， 搜索和插入的时间复杂度为"),t("mjx-container",y2,[(a(),i("svg",L2,B2)),D2]),s("， 这是不能接受的。")]),v2,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-188",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0AA%20--%3E%20n1%5BNIL%5D%0AB%20--%3E%20n2%5BNIL%5D%0AC%20--%3E%20n3%5BNIL%5D%0AD%20--%3E%20n4%5BNIL%5D%0AE%20--%3E%20n5%5BNIL%5D%0AF%20--%3E%20n6%5BNIL%5D%0AA((1))%20--%3E%20B((2))%0AB%20--%3E%20C((3))%0AC%20--%3E%20D((4))%0AD%20--%3E%20E((5))%0AE%20--%3E%20F((6))%0AF%20--%3E%20G((7))%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%2Cn1%2Cn2%2Cn3%2Cn4%2Cn5%2Cn6%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),M2,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-213",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0AA((2))%20--%3E%20B((1))%0AA%20--%3E%20C((4))%0AC%20--%3E%20F((3))%0AC%20--%3E%20D((5))%0AD%20--%3E%20n2%5BNIL%5D%0AD%20--%3E%20E((6))%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%2Cn1%2Cn2%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),N2,F2,V2,S2,R2,P2,Z2,j2,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-238",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20after%20%5B%E5%B7%A6%E6%97%8B%E5%90%8E%5D%0Aa((4))%20--%3E%20b((2))%0Ab%20--%3E%20c((1))%0Aa%20--%3E%20d((5))%0Ab%20--%3E%20e((3))%0Ad%20--%3E%20n1%5BNIL%5D%0Ad%20--%3E%20f((6))%0Aend%0Asubgraph%20before%20%5B%E5%B7%A6%E6%97%8B%E5%89%8D%5D%0AA((2))%20--%3E%20B((1))%0AA%20--%3E%20C((4))%0AC%20--%3E%20F((3))%0AC%20--%3E%20D((5))%0AD%20--%3E%20n2%5BNIL%5D%0AD%20--%3E%20E((6))%0Aend%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%2Cn1%2Cn2%2Ca%2Cb%2Cc%2Cd%2Ce%2Cf%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),I2,t("p",null,[s("旋转操作是大多数平衡树维护平衡性质的操作， 时间复杂度为"),t("mjx-container",U2,[(a(),i("svg",G2,z2)),J2]),s("。")]),O2,t("p",null,[s("AVL树的平衡定义: 对于树中任意一个结点, 其左子树深度和右子树深度的差值绝对值"),K2,s(),t("mjx-container",$2,[(a(),i("svg",W2,Y2)),t3]),s(".")]),s3,a3,t("p",null,[s("AVL树的性质保证了AVL树的高度为"),t("mjx-container",e3,[(a(),i("svg",l3,n3)),Q3]),s("级别, 因此也被称为『高度平衡树』。")]),o3,r3,t("ol",null,[h3,t("li",null,[s("由于是在AVL树上插入/删除了一个结点， 所以若一颗子树失衡, 其"),t("mjx-container",T3,[(a(),i("svg",d3,c3)),m3]),s("只能为2")])]),k3,t("ol",null,[g3,t("li",null,[s("L的左子树比右子树高 --> "),t("mjx-container",A3,[(a(),i("svg",u3,E3)),w3])])]),t("p",null,[s("设"),t("mjx-container",x3,[(a(),i("svg",C3,f3)),y3]),s("， 则有")]),t("ol",null,[t("li",null,[t("mjx-container",L3,[(a(),i("svg",b3,D3)),v3])]),t("li",null,[t("mjx-container",M3,[(a(),i("svg",N3,V3)),S3])]),t("li",null,[t("mjx-container",R3,[(a(),i("svg",P3,j3)),I3])])]),U3,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-379",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20gb%20%5B%E5%8F%B3%E6%97%8B%E5%90%8E%5D%0AA%20--%3E%20D%5B%2F%22LL%20(h%20%2B%201)%22%5C%5D%0AA((L))%20--%3E%20B((%22N%20(h%2B1%20%2F%20h%2B2)%22))%0AB%20--%3E%20E%5B%2F%22LR%20(h%20%2F%20h%2B1)%22%5C%5D%0AB%20--%3E%20C%5B%2F%22R%20(h)%22%5C%5D%0Aend%0Asubgraph%20ga%20%5B%E5%A4%B1%E8%A1%A1%5D%0Aa((%22N%22))%20--%3E%20b((%22L%20(h%2B2)%22))%0Aa%20--%3E%20c%5B%2F%22R%20(h)%22%5C%5D%0Ab%20--%3E%20d%5B%2F%22LL%20(h%2B1)%22%5C%5D%0Ab%20--%3E%20e%5B%2F%22LR%20(h%20%2F%20h%2B1)%22%5C%5D%0Aend%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%2CH%2CI%2CJ%2CK%2CL%2CM%2CN%2Cn1%2Cn2%2Cn3%2Cn4%2Cn5%2Cn6%2Cn7%2Cn8%2Ca%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),t("p",null,[s("右旋后LL、LR、R的高度并不会变化， 此时我们可以计算出N的高度变为了"),t("mjx-container",G3,[(a(),i("svg",q3,J3)),O3]),s(", N子树和L子树都满足了AVL树性质， 修复完成!")]),K3,$3,t("p",null,[s("设"),t("mjx-container",W3,[(a(),i("svg",X3,t6)),s6]),s(", 则有")]),t("ol",null,[t("li",null,[t("mjx-container",a6,[(a(),i("svg",e6,i6)),n6]),s(";")]),t("li",null,[t("mjx-container",Q6,[(a(),i("svg",o6,h6)),T6])]),t("li",null,[t("mjx-container",d6,[(a(),i("svg",p6,m6)),k6])]),t("li",null,[t("mjx-container",g6,[(a(),i("svg",A6,_6)),E6])]),t("li",null,[t("mjx-container",w6,[(a(),i("svg",x6,H6)),f6])])]),t("p",null,[t("mjx-container",y6,[(a(),i("svg",L6,B6)),D6]),s("型的失衡可以通过 L左旋 -> N右旋 来解决， 如下图")]),(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-422",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0A%20%20subgraph%20gc%20%5BL%E5%B7%A6%E6%97%8B%20%2B%20N%20%E5%8F%B3%E6%97%8B%E5%90%8E%5D%0A%20%20k((%22LR%22))%0A%20%20i((%22L%20(h%2B1)%22))%0A%20%20h((%22N%20(h%2B1)%22))%0A%20%20j%5B%2F%22LL%20(h)%22%5C%5D%0A%20%20l%5B%2F%22R%20(h)%22%5C%5D%0A%20%20m%5B%2F%22LRL%20(h%20%2F%20h-1)%22%5C%5D%0A%20%20n%5B%2F%22LRR%20(h%20%2F%20h-1)%22%5C%5D%0A%09%0A%09k%20--%3E%20i%0A%20%20k%20--%3E%20h%0A%20%20i%20--%3E%20j%0A%20%20i%20--%3E%20m%0A%20%20h%20--%3E%20n%0A%20%20h%20--%3E%20l%0A%20%20end%0A%0A%20%20subgraph%20gb%20%5BL%E5%B7%A6%E6%97%8B%E5%90%8E%5D%0A%20%20A((%22N%22))%0A%20%20B((%22L%20(h%20%2B%201)%22))%0A%20%20D%5B%2F%22LL%20(h)%22%5C%5D%0A%20%20E((%22LR%20(h%2B2)%22))%0A%20%20C%5B%2F%22R%20(h)%22%5C%5D%0A%20%20F%5B%2F%22LRL%20(h%20%2F%20h-1)%22%5C%5D%0A%20%20G%5B%2F%22LRR%20(h%20%2F%20h-1)%22%5C%5D%0A%20%20A%20--%3E%20E%0A%20%20A%20--%3E%20C%0A%20%20E%20--%3E%20B%0A%20%20B%20--%3E%20D%0A%20%20B%20--%3E%20F%0A%20%20E%20--%3E%20G%0A%20%20end%0A%0A%20%20subgraph%20ga%20%5B%E5%A4%B1%E8%A1%A1%5D%0A%20%20a((%22N%22))%20--%3E%20b((%22L%20(h%2B2)%22))%0A%20%20a%20--%3E%20c%5B%2F%22R%20(h)%22%5C%5D%0A%20%20b%20--%3E%20d%5B%2F%22LL%20(h)%22%5C%5D%0A%20%20b%20--%3E%20e((%22LR%20(h%2B1)%22))%0A%20%20e%20--%3E%20f%5B%2F%22LRL%20(h%20%2F%20h-1)%22%5C%5D%0A%20%20e%20--%3E%20g%5B%2F%22LRR%20(h%20%2F%20h-1)%22%5C%5D%0A%20%20end%0A%0A%0AclassDef%20commonNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0Aclass%20A%2CB%2CC%2CD%2CE%2CF%2CG%2CH%2CI%2CJ%2CK%2CL%2CM%2CN%2Cn1%2Cn2%2Cn3%2Cn4%2Cn5%2Cn6%2Cn7%2Cn8%2Ca%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%20commonNode%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),t("p",null,[s("从结果上看, 操作完成后"),t("mjx-container",v6,[(a(),i("svg",M6,F6)),V6]),s("， 符合AVL树性质。")]),S6,R6,P6,Z6,t("p",null,[s("一颗 "),t("mjx-container",j6,[(a(),i("svg",I6,G6)),q6]),s("阶B树满足如下性质:")]),t("ol",null,[t("li",null,[s("每个结点最多有"),t("mjx-container",z6,[(a(),i("svg",J6,K6)),$6]),s("个子结点")]),t("li",null,[s("每个非叶子结点(除了根)至少有"),t("mjx-container",W6,[(a(),i("svg",X6,t1)),s1])]),a1,e1,l1,i1]),n1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-660",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E6%8D%A2%E8%89%B2%E5%90%8E%0Ag((G))%0Ap((P))%0Au((U))%0An((N))%0Apr%5B%2F%20%5C%5D%0Anl%5B%2F%20%5C%5D%0Anr%5B%2F%20%5C%5D%0Aul%5B%2F%20%5C%5D%0Aur%5B%2F%20%5C%5D%0A%0Ag%20--%3E%20p%0Ag%20--%3E%20u%0Ap%20--%3E%20n%0Ap%20--%3E%20pr%0An%20--%3E%20nl%0An%20--%3E%20nr%0Au%20--%3E%20ul%0Au%20--%3E%20ur%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%E7%8A%B6%E6%80%81%0AG((G))%0AP((P))%0AU((U))%0AN((N))%0APR%5B%2F%20%5C%5D%0ANL%5B%2F%20%5C%5D%0ANR%5B%2F%20%5C%5D%0AUL%5B%2F%20%5C%5D%0AUR%5B%2F%20%5C%5D%0A%0AG%20--%3E%20P%0AG%20--%3E%20U%0AP%20--%3E%20N%0AP%20--%3E%20PR%0AN%20--%3E%20NL%0AN%20--%3E%20NR%0AU%20--%3E%20UL%0AU%20--%3E%20UR%0Aend%0A%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2Cp%2Cu%20blackNode%0Aclass%20P%2CN%2CU%2Cg%2Cn%20redNode%0Aclass%20PR%2CNL%2CNR%2CUL%2CUR%2Cpr%2Cnl%2Cnr%2Cul%2Cur%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),Q1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-668",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0AG((G))%0AP((P))%0AU((U))%0AN((N))%0APR%5B%2F%20%5C%5D%0ANL%5B%2F%20%5C%5D%0ANR%5B%2F%20%5C%5D%0AUL%5B%2F%20%5C%5D%0AUR%5B%2F%20%5C%5D%0A%0AG%20--%3E%20P%0AG%20--%3E%20U%0AP%20--%3E%20N%0AP%20--%3E%20PR%0AN%20--%3E%20NL%0AN%20--%3E%20NR%0AU%20--%3E%20UL%0AU%20--%3E%20UR%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2CU%20blackNode%0Aclass%20P%2CN%20redNode%0Aclass%20PR%2CNL%2CNR%2CUL%2CUR%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),o1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-722",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E5%8F%B3%E6%97%8B%20%2B%20%E6%8D%A2%E8%89%B2%E5%90%8E%0Ap((P))%0Au((U))%0An((N))%0Ag((G))%0Apr%5B%2F%20%5C%5D%0Anl%5B%2F%20%5C%5D%0Anr%5B%2F%20%5C%5D%0Aul%5B%2F%20%5C%5D%0Aur%5B%2F%20%5C%5D%0A%0Ap%20--%3E%20n%0An%20--%3E%20nl%0An%20--%3E%20nr%0Ap%20--%3E%20g%0Ag%20--%3E%20pr%0Ag%20--%3E%20u%0Au%20--%3E%20ul%0Au%20--%3E%20ur%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%E7%8A%B6%E6%80%81%0AG((G))%0AP((P))%0AU((U))%0AN((N))%0APR%5B%2F%20%5C%5D%0ANL%5B%2F%20%5C%5D%0ANR%5B%2F%20%5C%5D%0AUL%5B%2F%20%5C%5D%0AUR%5B%2F%20%5C%5D%0A%0AG%20--%3E%20P%0AG%20--%3E%20U%0AP%20--%3E%20N%0AP%20--%3E%20PR%0AN%20--%3E%20NL%0AN%20--%3E%20NR%0AU%20--%3E%20UL%0AU%20--%3E%20UR%0Aend%0A%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2Cp%2Cu%20blackNode%0Aclass%20P%2CN%2CU%2Cg%2Cn%20redNode%0Aclass%20PR%2CNL%2CNR%2CUL%2CUR%2Cpr%2Cnl%2Cnr%2Cul%2Cur%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),r1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-730",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0AG((G))%0AP((P))%0AU((U))%0APL%5B%2F%20%5C%5D%0AN((N))%0ANL%5B%2F%20%5C%5D%0ANR%5B%2F%20%5C%5D%0AUL%5B%2F%20%5C%5D%0AUR%5B%2F%20%5C%5D%0A%0AG%20--%3E%20P%0AG%20--%3E%20U%0AP%20--%3E%20PL%0AP%20--%3E%20N%0AN%20--%3E%20NL%0AN%20--%3E%20NR%0AU%20--%3E%20UL%0AU%20--%3E%20UR%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2CU%20blackNode%0Aclass%20P%2CN%20redNode%0Aclass%20PL%2CNL%2CNR%2CUL%2CUR%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),h1,T1,d1,p1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-747",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20P%E5%B7%A6%E6%97%8B%E5%90%8E%0Ag((G))%0Ap((P))%0An((N))%0Au((U))%0Apl%5B%2F%20PL%20%5C%5D%0Anl%5B%2F%20NL%20%5C%5D%0Anr%5B%2F%20NR%20%5C%5D%0Aul%5B%2F%20UL%20%5C%5D%0Aur%5B%2F%20UR%20%5C%5D%0A%0Ag%20--%3E%20n%0Ag%20--%3E%20u%0An%20--%3E%20p%0An%20--%3E%20nr%0Ap%20--%3E%20pl%0Ap%20--%3E%20nl%0Au%20--%3E%20ul%0Au%20--%3E%20ur%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%E7%8A%B6%E6%80%81%0AG((G))%0AP((P))%0AU((U))%0APL%5B%2F%20PL%20%5C%5D%0AN((N))%0ANL%5B%2F%20NL%20%5C%5D%0ANR%5B%2F%20NR%20%5C%5D%0AUL%5B%2F%20UL%20%5C%5D%0AUR%5B%2F%20UR%20%5C%5D%0A%0AG%20--%3E%20P%0AG%20--%3E%20U%0AP%20--%3E%20PL%0AP%20--%3E%20N%0AN%20--%3E%20NL%0AN%20--%3E%20NR%0AU%20--%3E%20UL%0AU%20--%3E%20UR%0Aend%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2CU%2Cg%2Cu%20blackNode%0Aclass%20P%2CN%2Cp%2Cn%20redNode%0Aclass%20PL%2CNL%2CNR%2CUL%2CUR%2Cpl%2Cnl%2Cnr%2Cul%2Cur%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),c1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-760",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0A%0Asubgraph%20%22P%E5%B7%A6%E6%97%8B%20%2B%20G%E5%8F%B3%E6%97%8B%20%2B%20N%E3%80%81G%E6%8D%A2%E8%89%B2%E5%90%8E%22%0AP((P))%0AG((G))%0AN((N))%0AU((U))%0APL%5B%2F%20PL%20%5C%5D%0ANL%5B%2F%20NL%20%5C%5D%0ANR%5B%2F%20NR%20%5C%5D%0AUL%5B%2F%20UL%20%5C%5D%0AUR%5B%2F%20UR%20%5C%5D%0A%0AN%20--%3E%20P%0AP%20--%3E%20PL%0AP%20--%3E%20NL%0AN%20--%3E%20G%20--%3E%20NR%0AG%20--%3E%20U%0AU%20--%3E%20UL%0AU%20--%3E%20UR%0Aend%0Asubgraph%20P%E5%B7%A6%E6%97%8B%E5%90%8E%0Ag((G))%0Ap((P))%0An((N))%0Au((U))%0Apl%5B%2F%20PL%20%5C%5D%0Anl%5B%2F%20NL%20%5C%5D%0Anr%5B%2F%20NR%20%5C%5D%0Aul%5B%2F%20UL%20%5C%5D%0Aur%5B%2F%20UR%20%5C%5D%0A%0Ag%20--%3E%20n%0Ag%20--%3E%20u%0An%20--%3E%20p%0An%20--%3E%20nr%0Ap%20--%3E%20pl%0Ap%20--%3E%20nl%0Au%20--%3E%20ul%0Au%20--%3E%20ur%0Aend%0A%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2CU%2Cg%2Cu%2CN%20blackNode%0Aclass%20P%2Cp%2Cn%2CG%20redNode%0Aclass%20PL%2CNL%2CNR%2CUL%2CUR%2Cpl%2Cnl%2Cnr%2Cul%2Cur%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),m1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-828",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E5%88%A0%E9%99%A4N%E5%90%8E%0Ap((P))%0Apl%5B%2F%22PL(k)%22%5C%5D%0Ar((%22R(k-1)%22))%0Arl%5BNIL%5D%0Arr%5BNIL%5D%0Ap%20--%3E%20pl%0Ap%20--%3E%20r%0Ar%20--%3E%20rl%0Ar%20--%3E%20rr%0Aend%0Asubgraph%20%E5%88%A0%E9%99%A4N%E5%89%8D%0AP((P))%0APL%5B%2F%22PL(k)%22%5C%5D%0AN((%22N(k)%22))%0AR((%22R(k-1)%22))%0ANR%5BNIL%5D%0ARL%5BNIL%5D%0ARR%5BNIL%5D%0A%0AP%20--%3E%20PL%0AP%20--%3E%20N%0AN%20--%3E%20R%0AN%20--%3E%20NR%0AR%20--%3E%20RL%0AR%20--%3E%20RR%0Aend%0A%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2CU%2CN%2CNR%2Crl%2Crr%2CRL%2CRR%20blackNode%0Aclass%20R%2Cr%2Cp%2CP%20redNode%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),k1,g1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-835",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20R%E6%9F%93%E9%BB%91%E5%90%8E%0Ap((P))%0Apl%5B%2F%22PL(k)%22%5C%5D%0Ar((%22R(k)%22))%0Arl%5BNIL%5D%0Arr%5BNIL%5D%0Ap%20--%3E%20pl%0Ap%20--%3E%20r%0Ar%20--%3E%20rl%0Ar%20--%3E%20rr%0Aend%0Asubgraph%20R%E6%9F%93%E9%BB%91%E5%89%8D%0AP((P))%0APL%5B%2F%22PL(k)%22%5C%5D%0AR((%22R(k-1)%22))%0ARL%5BNIL%5D%0ARR%5BNIL%5D%0A%0AP%20--%3E%20PL%0AP%20--%3E%20R%0AR%20--%3E%20RL%0AR%20--%3E%20RR%0Aend%0A%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20G%2CU%2CN%2CNR%2Cr%2Crl%2Crr%2CRL%2CRR%20blackNode%0Aclass%20R%2Cp%2CP%20redNode%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),A1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-890",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E7%BB%B4%E6%8A%A4%E5%90%8E%0Ap((P))%0An((N))%0As((S))%0Asl((SL))%0Asr((SR))%0Ap%20--%3E%20n%0Ap%20--%3E%20s%0As%20--%3E%20sl%0As%20--%3E%20sr%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%0AP((P))%0AN((N))%0AS((S))%0ASL((SL))%0ASR((SR))%0A%0AP%20--%3E%20N%0AP%20--%3E%20S%0AS%20--%3E%20SL%0AS%20--%3E%20SR%0Aend%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20P%2Cs%20redNode%3B%0Aclass%20S%2CN%2CSL%2CSR%2Cp%2Csl%2Csr%2Cn%20blackNode%3B%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),u1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-918",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E7%BB%B4%E6%8A%A4%E5%90%8E%0AP((P))%0AN((N))%0AS((S))%0ASL((SL))%0ASR((SR))%0A%0AP%20--%3E%20N%0AP%20--%3E%20S%0AS%20--%3E%20SL%0AS%20--%3E%20SR%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%0Ap((P))%0An((N))%0As((S))%0Asl((SL))%0Asr((SR))%0Ap%20--%3E%20n%0Ap%20--%3E%20s%0As%20--%3E%20sl%0As%20--%3E%20sr%0Aend%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20S%20redNode%3B%0Aclass%20S%2CN%2CSL%2CSR%2Cp%2Csl%2Csr%2Cn%2Cs%2CP%20blackNode%3B%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),_1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-931",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E7%BB%B4%E6%8A%A4%E5%90%8E%0AP((P))%0AN((N))%0AS((S))%0ASL((SL))%0ASR((SR))%0A%0AS%20--%3E%20P%0AP%20--%3E%20N%0AS%20--%3E%20SR%0AP%20--%3E%20SL%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%0Ap((P))%0An((N))%0As((S))%0Asl((SL))%0Asr((SR))%0Ap%20--%3E%20n%0Ap%20--%3E%20s%0As%20--%3E%20sl%0As%20--%3E%20sr%0Aend%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20sr%20redNode%3B%0Aclass%20N%2CSR%2Cn%2Cs%2CP%20blackNode%3B%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%2Csl%2Cp%2CSL%2CS%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),E1,w1,x1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-950",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E7%BB%B4%E6%8A%A4%E5%90%8E%0Ap((P))%0An((N))%0Asll%5B%2F%20%5C%5D%0Aslr%5B%2F%20%5C%5D%0As((S))%0Asl((SL))%0Asr((SR))%0Ap%20--%3E%20n%0Ap%20--%3E%20sl%0Asl%20--%3E%20sll%0Asl%20--%3E%20s%0As%20--%3E%20slr%0As%20--%3E%20sr%0A%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%0AP((P))%0AN((N))%0AS((S))%0ASL((SL))%0ASR((SR))%0A%0AP%20--%3E%20N%0AP%20--%3E%20S%0AS%20--%3E%20SL%0AS%20--%3E%20SR%0A%0Aend%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20SL%2Cs%20redNode%3B%0Aclass%20N%2CSR%2Cn%2CS%2Csr%2Csl%20blackNode%3B%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%2Cp%2CP%2Csll%2Cslr%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),C1,(a(),Q(o,null,{default:e(()=>[r(n,{id:"mermaid-987",class:"mermaid trudbot-mermaid",graph:"%25%25%7B%20init%3A%20%7B%20'flowchart'%3A%20%7B%20'curve'%3A%20'basis'%20%7D%20%7D%20%7D%25%25%0Aflowchart%20TD%0Asubgraph%20%E7%BB%B4%E6%8A%A4%E5%90%8E%0As((S))%0Ap((P))%0Asr((SR))%0An((N))%0Asl((SL))%0A%0As%20--%3E%20p%0Ap%20--%3E%20n%0Ap%20--%3E%20sl%0As%20--%3E%20sr%0Aend%0Asubgraph%20%E5%A4%B1%E8%A1%A1%0AP((P))%0AN((N))%0AS((S))%0ASL((SL))%0ASR((SR))%0A%0AP%20--%3E%20N%0AP%20--%3E%20S%0AS%20--%3E%20SL%0AS%20--%3E%20SR%0Aend%0AclassDef%20tree%20fill%3A%20white%2C%20color%3A%20black%2C%20stroke%3A%20black%0AclassDef%20blackNode%20fill%3A%20black%2Ccolor%3A%20white%2Cstroke%3Anone%0AclassDef%20redNode%20fill%3A%20red%2Ccolor%3A%20white%2Cstroke%3A%20none%0Aclass%20S%2Cp%20redNode%3B%0Aclass%20N%2CP%2CSL%2CSR%2Cs%2Cn%2Csl%2Csr%20blackNode%3B%0Aclass%20PL%2CNL%2CUL%2CUR%2Cpl%20tree%0A"})]),fallback:e(()=>[s(" Loading... ")]),_:1})),H1])}const F1=h(d,[["render",f1]]);export{N1 as __pageData,F1 as default};
